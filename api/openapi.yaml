openapi: 3.0.1
info:
  contact:
    name: Selling Partner API Developer Support
    url: https://sellercentral.amazon.com/gp/mws/contactus.html
  description: |-
    The Selling Partner API for Listings Items (Listings Items API) provides programmatic access to selling partner listings on Amazon. Use this API in collaboration with the Selling Partner API for Product Type Definitions, which you use to retrieve the information about Amazon product types needed to use the Listings Items API.

    For more information, see the [Listings Items API Use Case Guide](doc:listings-items-api-v2021-08-01-use-case-guide).
  license:
    name: Apache License 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  title: Selling Partner API for Listings Items
  version: 2021-08-01
servers:
- url: https://sellingpartnerapi-na.amazon.com/
paths:
  /listings/2021-08-01/items/{sellerId}/{sku}:
    delete:
      description: |-
        Delete a listings item for a selling partner.

        **Note:** The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).

        **Usage Plan:**

        | Rate (requests per second) | Burst |
        | ---- | ---- |
        | 5 | 10 |

        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: deleteListingsItem
      parameters:
      - description: "A selling partner identifier, such as a merchant account or\
          \ vendor code."
        in: path
        name: sellerId
        required: true
        schema:
          type: string
      - description: A selling partner provided identifier for an Amazon listing.
        in: path
        name: sku
        required: true
        schema:
          type: string
      - description: A comma-delimited list of Amazon marketplace identifiers for
          the request.
        example: ATVPDKIKX0DER
        explode: false
        in: query
        name: marketplaceIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "A locale for localization of issues. When not provided, the\
          \ default language code of the first marketplace is used. Examples: \"en_US\"\
          , \"fr_CA\", \"fr_FR\". Localized messages default to \"en_US\" when a localization\
          \ is not available in the specified locale."
        example: en_US
        in: query
        name: issueLocale
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
              schema:
                $ref: '#/components/schemas/ListingsItemSubmissionResponse'
          description: Successfully understood the listings item delete request. See
            the response to determine whether the submission has been accepted.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          x-amzn-api-sandbox:
            static:
            - request:
                parameters: {}
              response:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  sku:
                    value: BadSKU
              response:
                errors:
                - code: BAD_REQUEST
                  message: Invalid input
                  details: Invalid input
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: "Indicates that access to the resource is forbidden. Possible\
            \ reasons include Access Denied, Unauthorized, Expired Token, or Invalid\
            \ Signature."
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
      tags:
      - listings
    get:
      description: |-
        Returns details about a listings item for a selling partner.

        **Note:** The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).

        **Usage Plan:**

        | Rate (requests per second) | Burst |
        | ---- | ---- |
        | 5 | 10 |

        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getListingsItem
      parameters:
      - description: "A selling partner identifier, such as a merchant account or\
          \ vendor code."
        in: path
        name: sellerId
        required: true
        schema:
          type: string
      - description: A selling partner provided identifier for an Amazon listing.
        in: path
        name: sku
        required: true
        schema:
          type: string
      - description: A comma-delimited list of Amazon marketplace identifiers for
          the request.
        example: ATVPDKIKX0DER
        explode: false
        in: query
        name: marketplaceIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "A locale for localization of issues. When not provided, the\
          \ default language code of the first marketplace is used. Examples: \"en_US\"\
          , \"fr_CA\", \"fr_FR\". Localized messages default to \"en_US\" when a localization\
          \ is not available in the specified locale."
        example: en_US
        in: query
        name: issueLocale
        schema:
          type: string
      - description: "A comma-delimited list of data sets to include in the response.\
          \ Default: summaries."
        example: summaries
        in: query
        name: includedData
        schema:
          default: summaries
      responses:
        "200":
          content:
            application/json:
              example:
                sku: GM-ZDPI-9B4E
                summaries:
                - marketplaceId: ATVPDKIKX0DER
                  asin: B071VG5N9D
                  productType: LUGGAGE
                  conditionType: new_new
                  status:
                  - BUYABLE
                  itemName: Hardside Carry-On Spinner Suitcase Luggage
                  createdDate: 2021-02-01T00:00:00Z
                  lastUpdatedDate: 2021-03-01T00:00:00Z
                  mainImage:
                    link: https://www.example.com/luggage.png
                    height: 500
                    width: 500
                offers:
                - marketplaceId: ATVPDKIKX0DER
                  offerType: B2C
                  price:
                    currencyCode: USD
                    amount: "100.00"
                fulfillmentAvailability:
                - fulfillmentChannelCode: DEFAULT
                  quantity: 100
                issues: []
              schema:
                $ref: '#/components/schemas/Item'
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  body: {}
              response:
                sku: GM-ZDPI-9B4E
                summaries:
                - marketplaceId: ATVPDKIKX0DER
                  asin: B071VG5N9D
                  productType: LUGGAGE
                  conditionType: new_new
                  status:
                  - BUYABLE
                  itemName: Hardside Carry-On Spinner Suitcase Luggage
                  createdDate: 2021-02-01T00:00:00Z
                  lastUpdatedDate: 2021-03-01T00:00:00Z
                  mainImage:
                    link: https://www.example.com/luggage.png
                    height: 500
                    width: 500
                offers:
                - marketplaceId: ATVPDKIKX0DER
                  offerType: B2C
                  price:
                    currencyCode: USD
                    amount: "100.00"
                fulfillmentAvailability:
                - fulfillmentChannelCode: DEFAULT
                  quantity: 100
                issues: []
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  sku:
                    value: BadSKU
              response:
                errors:
                - code: BAD_REQUEST
                  message: Invalid input
                  details: Invalid input
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: "Indicates that access to the resource is forbidden. Possible\
            \ reasons include Access Denied, Unauthorized, Expired Token, or Invalid\
            \ Signature."
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
      tags:
      - listings
    patch:
      description: |-
        Partially update (patch) a listings item for a selling partner. Only top-level listings item attributes can be patched. Patching nested attributes is not supported.

        **Note:** The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).

        **Usage Plan:**

        | Rate (requests per second) | Burst |
        | ---- | ---- |
        | 5 | 10 |

        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: patchListingsItem
      parameters:
      - description: "A selling partner identifier, such as a merchant account or\
          \ vendor code."
        in: path
        name: sellerId
        required: true
        schema:
          type: string
      - description: A selling partner provided identifier for an Amazon listing.
        in: path
        name: sku
        required: true
        schema:
          type: string
      - description: A comma-delimited list of Amazon marketplace identifiers for
          the request.
        example: ATVPDKIKX0DER
        explode: false
        in: query
        name: marketplaceIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "A locale for localization of issues. When not provided, the\
          \ default language code of the first marketplace is used. Examples: \"en_US\"\
          , \"fr_CA\", \"fr_FR\". Localized messages default to \"en_US\" when a localization\
          \ is not available in the specified locale."
        example: en_US
        in: query
        name: issueLocale
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingsItemPatchRequest'
        description: The request body schema for the patchListingsItem operation.
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
              schema:
                $ref: '#/components/schemas/ListingsItemSubmissionResponse'
          description: Successfully understood the listings item patch request. See
            the response to determine if the submission was accepted.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  body: {}
              response:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  sku:
                    value: BadSKU
              response:
                errors:
                - code: BAD_REQUEST
                  message: Invalid input
                  details: Invalid input
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: "Indicates that access to the resource is forbidden. Possible\
            \ reasons include Access Denied, Unauthorized, Expired Token, or Invalid\
            \ Signature."
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
      tags:
      - listings
      x-codegen-request-body-name: body
    put:
      description: |-
        Creates a new or fully-updates an existing listings item for a selling partner.

        **Note:** The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).

        **Usage Plan:**

        | Rate (requests per second) | Burst |
        | ---- | ---- |
        | 5 | 10 |

        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: putListingsItem
      parameters:
      - description: "A selling partner identifier, such as a merchant account or\
          \ vendor code."
        in: path
        name: sellerId
        required: true
        schema:
          type: string
      - description: A selling partner provided identifier for an Amazon listing.
        in: path
        name: sku
        required: true
        schema:
          type: string
      - description: A comma-delimited list of Amazon marketplace identifiers for
          the request.
        example: ATVPDKIKX0DER
        explode: false
        in: query
        name: marketplaceIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "A locale for localization of issues. When not provided, the\
          \ default language code of the first marketplace is used. Examples: \"en_US\"\
          , \"fr_CA\", \"fr_FR\". Localized messages default to \"en_US\" when a localization\
          \ is not available in the specified locale."
        example: en_US
        in: query
        name: issueLocale
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingsItemPutRequest'
        description: The request body schema for the putListingsItem operation.
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
              schema:
                $ref: '#/components/schemas/ListingsItemSubmissionResponse'
          description: Successfully understood the request to create or fully-update
            a listings item. See the response to determine if the submission has been
            accepted.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  body: {}
              response:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  sku:
                    value: BadSKU
              response:
                errors:
                - code: BAD_REQUEST
                  message: Invalid input
                  details: Invalid input
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: "Indicates that access to the resource is forbidden. Possible\
            \ reasons include Access Denied, Unauthorized, Expired Token, or Invalid\
            \ Signature."
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
      tags:
      - listings
      x-codegen-request-body-name: body
components:
  schemas:
    Error:
      description: Error response returned when the request is unsuccessful.
      properties:
        code:
          description: An error code that identifies the type of error that occurred.
          type: string
        message:
          description: A message that describes the error condition.
          type: string
        details:
          description: Additional details that can help the caller understand or fix
            the issue.
          type: string
      required:
      - code
      - message
      type: object
    ErrorList:
      description: A list of error responses returned when a request is unsuccessful.
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
      required:
      - errors
      type: object
    Item:
      description: A listings item.
      example:
        offers:
        - marketplaceId: marketplaceId
          offerType: B2C
          price:
            amount: amount
            currencyCode: currencyCode
          points:
            pointsNumber: 1
        - marketplaceId: marketplaceId
          offerType: B2C
          price:
            amount: amount
            currencyCode: currencyCode
          points:
            pointsNumber: 1
        procurement:
        - costPrice:
            amount: amount
            currencyCode: currencyCode
        - costPrice:
            amount: amount
            currencyCode: currencyCode
        fulfillmentAvailability:
        - quantity: 0
          fulfillmentChannelCode: fulfillmentChannelCode
        - quantity: 0
          fulfillmentChannelCode: fulfillmentChannelCode
        attributes:
          key: ""
        sku: sku
        issues:
        - severity: ERROR
          code: code
          attributeNames:
          - attributeNames
          - attributeNames
          message: message
        - severity: ERROR
          code: code
          attributeNames:
          - attributeNames
          - attributeNames
          message: message
        summaries:
        - marketplaceId: marketplaceId
          itemName: itemName
          lastUpdatedDate: 2000-01-23T04:56:07.000+00:00
          mainImage:
            link: link
            width: 6
            height: 0
          createdDate: 2000-01-23T04:56:07.000+00:00
          fnSku: fnSku
          asin: asin
          conditionType: new_new
          productType: productType
          status:
          - BUYABLE
          - BUYABLE
        - marketplaceId: marketplaceId
          itemName: itemName
          lastUpdatedDate: 2000-01-23T04:56:07.000+00:00
          mainImage:
            link: link
            width: 6
            height: 0
          createdDate: 2000-01-23T04:56:07.000+00:00
          fnSku: fnSku
          asin: asin
          conditionType: new_new
          productType: productType
          status:
          - BUYABLE
          - BUYABLE
      properties:
        sku:
          description: A selling partner provided identifier for an Amazon listing.
          type: string
        summaries:
          description: Summary details of a listings item.
          items:
            $ref: '#/components/schemas/ItemSummaryByMarketplace'
          type: array
        attributes:
          additionalProperties: true
          description: JSON object containing structured listings item attribute data
            keyed by attribute name.
          type: object
        issues:
          description: Issues associated with the listings item.
          items:
            $ref: '#/components/schemas/Issue'
          type: array
        offers:
          description: Offer details for the listings item.
          items:
            $ref: '#/components/schemas/ItemOfferByMarketplace'
          type: array
        fulfillmentAvailability:
          description: Fulfillment availability for the listings item.
          items:
            $ref: '#/components/schemas/FulfillmentAvailability'
          type: array
        procurement:
          description: Vendor procurement information for the listings item.
          items:
            $ref: '#/components/schemas/ItemProcurement'
          type: array
      required:
      - sku
      type: object
    ItemSummaries:
      description: Summary details of a listings item.
      items:
        $ref: '#/components/schemas/ItemSummaryByMarketplace'
      type: array
    ItemSummaryByMarketplace:
      description: Summary details of a listings item for an Amazon marketplace.
      example:
        marketplaceId: marketplaceId
        itemName: itemName
        lastUpdatedDate: 2000-01-23T04:56:07.000+00:00
        mainImage:
          link: link
          width: 6
          height: 0
        createdDate: 2000-01-23T04:56:07.000+00:00
        fnSku: fnSku
        asin: asin
        conditionType: new_new
        productType: productType
        status:
        - BUYABLE
        - BUYABLE
      properties:
        marketplaceId:
          description: A marketplace identifier. Identifies the Amazon marketplace
            for the listings item.
          type: string
        asin:
          description: Amazon Standard Identification Number (ASIN) of the listings
            item.
          type: string
        productType:
          description: The Amazon product type of the listings item.
          type: string
        conditionType:
          description: Identifies the condition of the listings item.
          enum:
          - new_new
          - new_open_box
          - new_oem
          - refurbished_refurbished
          - used_like_new
          - used_very_good
          - used_good
          - used_acceptable
          - collectible_like_new
          - collectible_very_good
          - collectible_good
          - collectible_acceptable
          - club_club
          type: string
          x-docgen-enum-table-extension:
          - value: new_new
            description: New
          - value: new_open_box
            description: New - Open Box.
          - value: new_oem
            description: New - OEM.
          - value: refurbished_refurbished
            description: Refurbished
          - value: used_like_new
            description: Used - Like New.
          - value: used_very_good
            description: Used - Very Good.
          - value: used_good
            description: Used - Good.
          - value: used_acceptable
            description: Used - Acceptable.
          - value: collectible_like_new
            description: Collectible - Like New.
          - value: collectible_very_good
            description: Collectible - Very Good.
          - value: collectible_good
            description: Collectible - Good.
          - value: collectible_acceptable
            description: Collectible - Acceptable.
          - value: club_club
            description: Club
        status:
          description: Statuses that apply to the listings item.
          items:
            enum:
            - BUYABLE
            - DISCOVERABLE
            type: string
            x-docgen-enum-table-extension:
            - value: BUYABLE
              description: The listings item can be purchased by shoppers. This status
                does not apply to vendor listings.
            - value: DISCOVERABLE
              description: The listings item is visible to shoppers.
          type: array
        fnSku:
          description: Fulfillment network stock keeping unit is an identifier used
            by Amazon fulfillment centers to identify each unique item.
          type: string
        itemName:
          description: "Name, or title, associated with an Amazon catalog item."
          type: string
        createdDate:
          description: "Date the listings item was created, in ISO 8601 format."
          format: date-time
          type: string
        lastUpdatedDate:
          description: "Date the listings item was last updated, in ISO 8601 format."
          format: date-time
          type: string
        mainImage:
          $ref: '#/components/schemas/ItemImage'
      required:
      - asin
      - createdDate
      - itemName
      - lastUpdatedDate
      - marketplaceId
      - productType
      - status
      type: object
    ItemImage:
      description: Image for the listings item.
      example:
        link: link
        width: 6
        height: 0
      properties:
        link:
          description: "Link, or URL, for the image."
          type: string
        height:
          description: Height of the image in pixels.
          type: integer
        width:
          description: Width of the image in pixels.
          type: integer
      required:
      - height
      - link
      - width
      type: object
    ItemAttributes:
      additionalProperties: true
      description: JSON object containing structured listings item attribute data
        keyed by attribute name.
      type: object
    ItemIssues:
      description: Issues associated with the listings item.
      items:
        $ref: '#/components/schemas/Issue'
      type: array
    Issue:
      description: An issue with a listings item.
      example:
        severity: ERROR
        code: code
        attributeNames:
        - attributeNames
        - attributeNames
        message: message
      properties:
        code:
          description: An issue code that identifies the type of issue.
          type: string
        message:
          description: A message that describes the issue.
          type: string
        severity:
          description: The severity of the issue.
          enum:
          - ERROR
          - WARNING
          - INFO
          type: string
          x-docgen-enum-table-extension:
          - value: ERROR
            description: "Indicates an issue has occurred preventing the submission\
              \ from processing, such as a validation error."
          - value: WARNING
            description: "Indicates an issue has occurred that should be reviewed,\
              \ but has not prevented the submission from processing."
          - value: INFO
            description: Indicates additional information has been provided that should
              be reviewed.
        attributeNames:
          description: "Names of the attributes associated with the issue, if applicable."
          items:
            type: string
          type: array
      required:
      - code
      - message
      - severity
      type: object
    ItemOffers:
      description: Offer details for the listings item.
      items:
        $ref: '#/components/schemas/ItemOfferByMarketplace'
      type: array
    ItemOfferByMarketplace:
      description: Offer details of a listings item for an Amazon marketplace.
      example:
        marketplaceId: marketplaceId
        offerType: B2C
        price:
          amount: amount
          currencyCode: currencyCode
        points:
          pointsNumber: 1
      properties:
        marketplaceId:
          description: Amazon marketplace identifier.
          type: string
        offerType:
          description: Type of offer for the listings item.
          enum:
          - B2C
          - B2B
          type: string
          x-docgen-enum-table-extension:
          - value: B2C
            description: "The offer on this listings item is available for Business\
              \ to Consumer purchase, meaning that it is available to shoppers on\
              \ Amazon retail sites."
          - value: B2B
            description: The offer on this listings item is available for Business
              to Business purchase.
        price:
          $ref: '#/components/schemas/Money'
        points:
          $ref: '#/components/schemas/Points'
      required:
      - marketplaceId
      - offerType
      - price
      type: object
    ItemProcurement:
      description: Vendor procurement information for the listings item.
      example:
        costPrice:
          amount: amount
          currencyCode: currencyCode
      properties:
        costPrice:
          $ref: '#/components/schemas/Money'
      required:
      - costPrice
      type: object
    FulfillmentAvailability:
      description: Fulfillment availability details for the listings item.
      example:
        quantity: 0
        fulfillmentChannelCode: fulfillmentChannelCode
      properties:
        fulfillmentChannelCode:
          description: Designates which fulfillment network will be used.
          type: string
        quantity:
          description: The quantity of the item you are making available for sale.
          minimum: 0
          type: integer
      required:
      - fulfillmentChannelCode
      type: object
    Money:
      description: The currency type and the amount.
      example:
        amount: amount
        currencyCode: currencyCode
      properties:
        currencyCode:
          description: Three-digit currency code. In ISO 4217 format.
          type: string
        amount:
          description: "A decimal number with no loss of precision. Useful when precision\
            \ loss is unnaceptable, as with currencies. Follows RFC7159 for number\
            \ representation."
          type: string
      required:
      - amount
      - currencyCode
      type: object
    Decimal:
      description: "A decimal number with no loss of precision. Useful when precision\
        \ loss is unnaceptable, as with currencies. Follows RFC7159 for number representation."
      type: string
    Points:
      description: "The number of Amazon Points offered with the purchase of an item,\
        \ and their monetary value. Note that the Points element is only returned\
        \ in Japan (JP)."
      example:
        pointsNumber: 1
      properties:
        pointsNumber:
          type: integer
      required:
      - pointsNumber
      type: object
    PatchOperation:
      description: Individual JSON Patch operation for an HTTP PATCH request.
      example:
        op: add
        path: path
        value:
        - key: ""
        - key: ""
      properties:
        op:
          description: "Type of JSON Patch operation. Supported JSON Patch operations\
            \ include add, replace, and delete. See <https://tools.ietf.org/html/rfc6902>."
          enum:
          - add
          - replace
          - delete
          type: string
          x-docgen-enum-table-extension:
          - value: add
            description: The "add" operation adds or replaces the target property.
          - value: replace
            description: The "replace" operation adds or replaces the target property.
          - value: delete
            description: The "delete" operation removes the target property. Not supported
              for vendors (vendors will receive an HTTP status code 400 response).
        path:
          description: JSON Pointer path of the element to patch. See <https://tools.ietf.org/html/rfc6902>.
          type: string
        value:
          description: "JSON value to add, replace, or delete."
          items:
            additionalProperties: true
            type: object
          type: array
      required:
      - op
      - path
      type: object
    ListingsItemPatchRequest:
      description: The request body schema for the patchListingsItem operation.
      example:
        patches:
        - op: add
          path: path
          value:
          - key: ""
          - key: ""
        - op: add
          path: path
          value:
          - key: ""
          - key: ""
        productType: productType
      properties:
        productType:
          description: The Amazon product type of the listings item.
          type: string
        patches:
          description: One or more JSON Patch operations to perform on the listings
            item.
          items:
            $ref: '#/components/schemas/PatchOperation'
          minItems: 1
          type: array
      required:
      - patches
      - productType
      type: object
    ListingsItemPutRequest:
      description: The request body schema for the putListingsItem operation.
      example:
        requirements: LISTING
        attributes:
          key: ""
        productType: productType
      properties:
        productType:
          description: The Amazon product type of the listings item.
          type: string
        requirements:
          description: The name of the requirements set for the provided data.
          enum:
          - LISTING
          - LISTING_PRODUCT_ONLY
          - LISTING_OFFER_ONLY
          type: string
          x-docgen-enum-table-extension:
          - value: LISTING
            description: Indicates the submitted data contains product facts and sales
              terms.
          - value: LISTING_PRODUCT_ONLY
            description: Indicates the submitted data contains product facts only.
          - value: LISTING_OFFER_ONLY
            description: Indicates the submitted data contains sales terms only. Not
              supported for vendors (vendors will receive an HTTP status code 400
              response).
        attributes:
          additionalProperties: true
          description: JSON object containing structured listings item attribute data
            keyed by attribute name.
          type: object
      required:
      - attributes
      - productType
      type: object
    ListingsItemSubmissionResponse:
      description: Response containing the results of a submission to the Selling
        Partner API for Listings Items.
      example:
        submissionId: submissionId
        sku: sku
        issues:
        - severity: ERROR
          code: code
          attributeNames:
          - attributeNames
          - attributeNames
          message: message
        - severity: ERROR
          code: code
          attributeNames:
          - attributeNames
          - attributeNames
          message: message
        status: ACCEPTED
      properties:
        sku:
          description: A selling partner provided identifier for an Amazon listing.
          type: string
        status:
          description: The status of the listings item submission.
          enum:
          - ACCEPTED
          - INVALID
          type: string
          x-docgen-enum-table-extension:
          - value: ACCEPTED
            description: The listings submission was accepted for processing.
          - value: INVALID
            description: The listings submission was not valid and was not accepted
              for processing.
        submissionId:
          description: The unique identifier of the listings item submission.
          type: string
        issues:
          description: Listings item issues related to the listings item submission.
          items:
            $ref: '#/components/schemas/Issue'
          type: array
      required:
      - sku
      - status
      - submissionId
      type: object
x-original-swagger-version: "2.0"
